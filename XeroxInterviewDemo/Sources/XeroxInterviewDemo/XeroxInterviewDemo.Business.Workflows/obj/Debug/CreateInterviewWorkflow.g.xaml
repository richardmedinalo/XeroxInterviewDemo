<?xml version="1.0" encoding="utf-8"?>
<xbw1:CreateInterviewWorkflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:xb="clr-namespace:XeroxInterviewDemo.Business;assembly=XeroxInterviewDemo.Business" xmlns:xbo="clr-namespace:XeroxInterviewDemo.Business.Objects;assembly=XeroxInterviewDemo.Business.Objects" xmlns:xbv="clr-namespace:XeroxInterviewDemo.Business.Validations;assembly=XeroxInterviewDemo.Business.Validations" xmlns:xbw="clr-namespace:XeroxInterviewDemo.Business.Workbenchs;assembly=XeroxInterviewDemo.Business.Workbenchs" xmlns:xbw1="clr-namespace:XeroxInterviewDemo.Business.Workflows;assembly=XeroxInterviewDemo.Business.Workflows">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>XeroxInterviewDemo.Business</x:String>
      <x:String>XeroxInterviewDemo.Business.Objects</x:String>
      <x:String>XeroxInterviewDemo.Business.Validations</x:String>
      <x:String>XeroxInterviewDemo.Business.Workbenchs</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>DevExpress.Workflow.Activities.v15.1</AssemblyReference>
      <AssemblyReference>XeroxInterviewDemo.Business</AssemblyReference>
      <AssemblyReference>XeroxInterviewDemo.Business.Objects</AssemblyReference>
      <AssemblyReference>XeroxInterviewDemo.Business.Validations</AssemblyReference>
      <AssemblyReference>XeroxInterviewDemo.Business.Workbenchs</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Channels</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>XeroxInterviewDemo.Business.Workflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <xbw1:CreateInterviewWorkflow.Implementation>
    <Sequence DisplayName="Creating an Interview">
      <Sequence.Variables>
        <Variable x:TypeArguments="xbw:IWorkbench" Name="workbench" />
        <Variable x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)" Name="interviewBusinessObject" />
        <Variable x:TypeArguments="x:Boolean" Name="result" />
      </Sequence.Variables>
      <Assign>
        <Assign.To>
          <OutArgument x:TypeArguments="xbw:IWorkbench">
            <mca:CSharpReference x:TypeArguments="xbw:IWorkbench">workbench</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="xbw:IWorkbench">
            <mca:CSharpValue x:TypeArguments="xbw:IWorkbench">new DefaultWorkbench()</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign>
        <Assign.To>
          <OutArgument x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">
            <mca:CSharpReference x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">interviewBusinessObject</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">
            <mca:CSharpValue x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">new InterviewBusinessObject(workbench)</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <InvokeMethod MethodName="Create">
        <InvokeMethod.Result>
          <OutArgument x:TypeArguments="x:Boolean">
            <mca:CSharpReference x:TypeArguments="x:Boolean">result</mca:CSharpReference>
          </OutArgument>
        </InvokeMethod.Result>
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">
            <mca:CSharpValue x:TypeArguments="xbo:IBusinessObject(xb:InterviewBusiness)">interviewBusinessObject</mca:CSharpValue>
          </InArgument>
        </InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="xb:InterviewBusiness">
          <mca:CSharpValue x:TypeArguments="xb:InterviewBusiness">InterviewBusiness</mca:CSharpValue>
        </InArgument>
      </InvokeMethod>
      <If>
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">result</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Else>
          <Sequence>
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="i" />
            </Sequence.Variables>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">
                  <mca:CSharpReference x:TypeArguments="s:String[]">ValidationErrors</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">
                  <mca:CSharpValue x:TypeArguments="s:String[]">new string [interviewBusinessObject.Validator.CreatingValidator.ValidationMessages.Count]</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">i</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <ForEach x:TypeArguments="xbv:ValidationMessage" DisplayName="ForEach&lt;ValidationMessage&gt;">
              <ForEach.Values>
                <InArgument x:TypeArguments="scg:IEnumerable(xbv:ValidationMessage)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(xbv:ValidationMessage)">interviewBusinessObject.Validator.CreatingValidator.ValidationMessages</mca:CSharpValue>
                </InArgument>
              </ForEach.Values>
              <ActivityAction x:TypeArguments="xbv:ValidationMessage">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="xbv:ValidationMessage" Name="validationMessage" />
                </ActivityAction.Argument>
                <Assign>
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String">ValidationErrors[i]</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">validationMessage.ToString ()</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </ActivityAction>
            </ForEach>
          </Sequence>
        </If.Else>
      </If>
      <sads:DebugSymbol.Symbol>9xDPHnoBRgQprpGn9j5tvHAVjAFDOlxkZXZcVlNQcm9qZWN0c1xNeVNvdXJjZXNcWGVyb3hJbnRlcnZpZXdEZW1vXFNvdXJjZXNcWGVyb3hJbnRlcnZpZXdEZW1vXFhlcm94SW50ZXJ2aWV3RGVtby5CdXNpbmVzcy5Xb3JrZmxvd3NcQ3JlYXRlSW50ZXJ2aWV3V29ya2Zsb3cueGFtbBk6A6QBDgIBAUAFSw4CAVtMBVcOAgFOWAVmFAIBO2cFogEKAgECSAtIZQIBYkMLQ2ACAVxUC1SQAQIBVU8LT4kBAgFPZAlkZAIBSFsLW1gCAUJgC2CBAQIBPGoLalACAQNuCaABFAIBCXILfRQCASx+C4cBFAIBI4gBC58BFQIBCnoReqoBAgE0dRF1aQIBLYUBNYUBNgIBK4EBEYEBVwIBJIsBEYsBswECARySAQ+dARgCAQuaARWaAXACARSVARWVAW4CAQw=</sads:DebugSymbol.Symbol>
    </Sequence>
  </xbw1:CreateInterviewWorkflow.Implementation>
</xbw1:CreateInterviewWorkflow>